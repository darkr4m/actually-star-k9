# Generated by Django 5.2 on 2025-04-28 00:58

import django.core.validators
import django.db.models.deletion
import dogs_app.validators
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the full name of the dog (2-100 characters).', max_length=100, validators=[django.core.validators.MinLengthValidator(2, message='Name must be at least 2 characters long.'), django.core.validators.MaxLengthValidator(100, message='Name cannot exceed 100 characters.'), dogs_app.validators.validate_name], verbose_name="Dog's Name")),
                ('breed', models.CharField(blank=True, help_text='Specify the breed(s) of the dog (e.g., Labrador Retriever, Mixed). Max 100 characters.', max_length=100, null=True, verbose_name='Breed')),
                ('date_of_birth', models.DateField(blank=True, help_text="Enter the dog's approximate date of birth. Leave blank if unknown.", null=True, verbose_name='Approximate Date of Birth')),
                ('sex', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('UNKNOWN', 'Unknown')], default='UNKNOWN', help_text="Select the dog's sex.", max_length=7, verbose_name='Sex')),
                ('is_altered', models.BooleanField(blank=True, help_text='Is the dog spayed (female) or neutered (male)? Leave blank if unknown.', null=True, verbose_name='Is Spayed/Neutered')),
                ('color_markings', models.CharField(blank=True, help_text="Describe the dog's primary colors and any distinct markings (e.g., 'Black with white chest patch'). Max 150 characters.", max_length=150, verbose_name='Color & Markings')),
                ('weight_kg', models.DecimalField(blank=True, decimal_places=2, help_text="Enter the dog's approximate weight in kilograms.", max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.1, message='Weight must be a positive value.')], verbose_name='Weight (kg)')),
                ('skills', models.CharField(blank=True, help_text='List any known commands or skills the dog possesses (Sit, Stay, Fetch).', verbose_name='Known Skills / Commands')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('WAITLIST', 'Waitlist'), ('PROSPECTIVE', 'Prospective')], default='PROSPECTIVE', help_text='Select the current status of the dog within the system.', max_length=20, verbose_name='Status')),
                ('photo', models.ImageField(blank=True, help_text='Upload a photo of the dog.', null=True, upload_to='dog_photos/', verbose_name='Photo')),
                ('behavioral_notes', models.TextField(blank=True, help_text='Describe any known behavioral issues (anxiety, reactivity, resource guarding, bite history). Max 1000 characters.', max_length=1000, verbose_name='Behavioral Notes')),
                ('training_goals', models.TextField(blank=True, help_text="Describe the owner's specific training goals for this dog. Max 1000 characters.", max_length=1000, verbose_name='Training Goals')),
                ('previous_training', models.TextField(blank=True, help_text='Describe any previous training classes, private sessions, or known commands/skills the dog has. Max 1000 characters.', max_length=1000, verbose_name='Previous Training')),
                ('vaccination_rabies', models.DateField(blank=True, help_text='Enter the date of the last known Rabies vaccination.', null=True, verbose_name='Rabies Vaccination Date')),
                ('vaccination_dhpp', models.DateField(blank=True, help_text='Enter the date of the last known DHPP vaccination.', null=True, verbose_name='DHPP Vaccination Date')),
                ('vaccination_bordetella', models.DateField(blank=True, help_text='Enter the date of the last known Bordetella vaccination.', null=True, verbose_name='Bordetella Vaccination Date')),
                ('parasites', models.DateField(blank=True, help_text='Enter the date of the last known parasite screening.', null=True, verbose_name='Parasite Screening Date')),
                ('veterinarian_name', models.CharField(blank=True, help_text="Please enter the name of the dog's primary veterinarian/clinic.", max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(100), dogs_app.validators.validate_name], verbose_name='Veterinarian Name')),
                ('veterinarian_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text="Please enter the phone number of the dog's primary veterinarian/clinic.", max_length=25, null=True, region=None, verbose_name='Veterinarian Phone Number')),
                ('medical_notes', models.TextField(blank=True, help_text='Note any ongoing medical conditions, past surgeries, allergies, or medication requirements. Max 1000 characters.', max_length=1000, verbose_name='Medical Notes / Allergies')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('owner', models.ForeignKey(blank=True, help_text='Select the client who owns this dog. Only active clients are shown by default.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='dogs', to='clients_app.client', verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Dog',
                'verbose_name_plural': 'Dogs',
                'ordering': ['name', 'owner'],
            },
        ),
    ]
